services:
  identifier:
    platform: linux/x86_64
    image: semtech/mu-identifier:1.10.3
    environment:
      SESSION_COOKIE_SECURE: "on"
    labels:
      - "logging=true"
  dispatcher:
    platform: linux/x86_64
    image: semtech/mu-dispatcher:2.1.0-beta.2
    volumes:
      - ./config/dispatcher:/config
    labels:
      - "logging=true"
  frontend:
    image: lblod/frontend-smart-ipdc-generator-group-8:latest
    links:
      - identifier:backend
    restart: always
    labels:
      - "logging=true"

  # Your extra services here
  resource:
    platform: linux/x86_64
    image: semtech/mu-cl-resources:1.25.0
    volumes:
      - ./config/resources:/config
    labels:
      - "logging=true"

  migrations:
    platform: linux/x86_64
    image: semtech/mu-migrations-service:0.9.0
    links:
      - triplestore:database
    environment:
      MU_SPARQL_TIMEOUT: 600
    volumes:
      - ./config/migrations:/data/migrations
    labels:
      - "logging=true"
  delta-notifier:
    platform: linux/x86_64
    image: semtech/mu-delta-notifier:0.4.0
    volumes:
      - ./config/delta:/config/
    labels:
      - "logging=true"
  database:
    platform: linux/x86_64
    image: semtech/sparql-parser:0.0.8
    volumes:
      - ./config/authorization/:/config/
      - ./data/authorization/:/data/
    labels:
      - "logging=true"
  triplestore:
    platform: linux/x86_64
    image: redpencil/virtuoso:1.2.0-rc.1
    environment:
      SPARQL_UPDATE: "true"
    volumes:
      - ./data/db:/data
      - ./config/virtuoso/virtuoso.ini:/data/virtuoso.ini
    labels:
      - "logging=true"

  ollama:
    platform: linux/x86_64
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ./data/ollama:/root/.ollama
    ports:
      - 11434:11434
    environment:
      - OLLAMA_KEEP_ALIVE=-1          # Keep the model(s) loaded in memory
      - OLLAMA_HOST=0.0.0.0           # Listen on all interfaces
    healthcheck:
      test: "bash -c 'cat < /dev/null > /dev/tcp/localhost/11434'"
      interval: 2s                    # Check every 2 seconds
      timeout: 5s                     # Timeout after 5 seconds
      retries: 5                      # Max retries, if needed
      start_period: 5s                # Start checking after 5 seconds

  ollama-setup:
    image: curlimages/curl:7.77.0
    container_name: ollama-setup
    depends_on:
      ollama:
        condition: service_healthy    # Wait for 'ollama' container to be healthy
    entrypoint: >                     # Use the Ollama REST API to pull the mistral-nemo model
      /bin/sh -c 'curl http://ollama:11434/api/pull -d "{\"name\": \"mistral-nemo\"}" && echo "Curl command completed, model installed."'
  
  decision-consumer:
    image: lblod/backend-smart-ipdc-generator-group-8:latest
  
  tika:
    image: apache/tika:2.9.2.1
